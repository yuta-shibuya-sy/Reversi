---
import Reversi_Board from "../components/Reversi_Board.astro";
import { path } from "../path";
---

<div class="reversi">
  <div class="card-wrapper">
    <section class="card-outside">
      <div class="card">
        <div class="back">
          <img src={path("/assets/card_back.png")} alt="" />
        </div>
        <div class="front">
          <div>
            <h3 class="text">First</h3>
            <h1 class="card-color" color-value=""></h1>
            <h1 class="card-player" player-value=""></h1>
          </div>
        </div>
      </div>
    </section>
  </div>

  <div class="reversi-board-display">
    <Reversi_Board />
  </div>
</div>

<style>
  .card-wrapper {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    widows: 100vw;
    transition: all 1.5s;
  }

  .card-outside {
    display: flex;
    padding: 2%;
  }

  .card {
    width: 200px;
    position: relative;
  }

  .card::before {
    content: "";
    display: block;
    padding-top: 156.38%;
  }

  .card .back,
  .card .front {
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    width: 100%;
    backface-visibility: hidden;
    border: solid 2px #586365;
    border-radius: 8px;
    transition: all 1.5s;
    z-index: 100;
  }

  .card .back {
    transform: rotateY(0);
  }

  /* .card:hover .back {
    transform: rotateY(180deg);
  } */

  .card-revolution .back {
    transform: rotateY(180deg);
  }

  .card .front {
    font-family: Cambria, Cochin, Georgia, Times, "Times New Roman", serif;
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    transform: rotateY(-180deg);
  }

  /* .card:hover .front {
    transform: rotateY(0);
  } */

  .card-revolution .front {
    transform: rotateY(0);
  }

  img {
    border-radius: 20px;
  }

  .front .text {
    font-size: 2.5rem;
    /* color: red; */
    margin-bottom: 7.5px;
  }

  .front .card-player {
    font-size: 2rem;
    margin-bottom: 2px;
  }

  .front .card-color {
    font-size: 2rem;
  }

  .reversi-board-display {
    display: none;
    opacity: 0;
    transition: all 1.5s;
  }

  @media (max-width: 500px) {
    .card {
      width: 130px;
    }

    .front .text {
      font-size: 2rem;
    }

    .front .card-player {
      font-size: 1.5rem;
    }

    .front .card-color {
      font-size: 1.5rem;
    }
  }
</style>

<script>
  const game_start_button =
    document.querySelector<HTMLElement>(".game-start-button");
  game_start_button.addEventListener("click", function () {
    const card = document.querySelector<HTMLElement>(".card");
    const player_number =
      document.querySelector<HTMLElement>(".game-start-button");
    const card_player = document.querySelector<HTMLElement>(".card-player");
    const card_color = document.querySelector<HTMLElement>(".card-color");

    const first_player_decision_display =
      document.querySelector<HTMLElement>(".card-wrapper"); //現在の画面
    const reversi_board = document.querySelector<HTMLElement>(
      ".reversi-board-display" //次の画面
    );

    if (player_number.getAttribute("data-value") == "Solo-player") {
      // どちらが先行なのか
      if (random() == 1) {
        card_player.textContent = "(You)";
        card_player.setAttribute("player-value", "you");
      } else {
        card_player.textContent = "(Computer)";
        card_player.setAttribute("player-value", "computer");
      }

      // 先行の色は
      if (random() == 1) {
        card_color.textContent = "White";
        card_color.setAttribute("color-value", "white");
      } else {
        card_color.textContent = "Black";
        card_color.setAttribute("color-value", "black");
      }
    } else if (player_number.getAttribute("data-value") == "Two-player") {
      // 先行の色は
      if (random() == 1) {
        card_color.textContent = "White";
        card_color.setAttribute("color-value", "white");
      } else {
        card_color.textContent = "Black";
        card_color.setAttribute("color-value", "black");
      }
    }
    // cardの回転
    setTimeout(function () {
      card.classList.add("card-revolution");
    }, 2000);

    // 次の画面の表示
    setTimeout(function () {
      first_player_decision_display.style.opacity = "0";
    }, 4000);
    setTimeout(function () {
      first_player_decision_display.style.display = "none";
      reversi_board.style.display = "block";
    }, 5000);
    setTimeout(function () {
      reversi_board.style.opacity = "1";
    }, 5500);
  });

  function random() {
    return Math.floor(Math.random() * 2) + 1;
  }
</script>
